{"version":3,"file":"styled.esm.js","sources":["../src/utils.ts","../src/styled.ts"],"sourcesContent":["import stringHash from \"string-hash\";\nimport { splitComma } from \"@daybrush/utils\";\nimport { InjectOptions } from \"./types\";\n\nexport function getHash(str: string) {\n    return stringHash(str).toString(36);\n}\nexport function getShadowRoot(parentElement: HTMLElement | SVGElement) {\n    if (parentElement && parentElement.getRootNode) {\n        const rootNode = parentElement.getRootNode();\n\n        if (rootNode.nodeType === 11) {\n            return rootNode;\n        }\n    }\n    return;\n}\nexport function injectStyle(className: string, css: string, options: Partial<InjectOptions>, shadowRoot?: Node) {\n    const style = document.createElement(\"style\");\n\n    style.setAttribute(\"type\", \"text/css\");\n    style.setAttribute(\"data-styled-id\", className);\n\n    if (options.nonce) {\n        style.setAttribute(\"nonce\", options.nonce);\n    }\n    let styleCSS = css;\n    if (!options.original) {\n        styleCSS = css.replace(/([^}{]*){/mg, (all, selector) => {\n            return splitComma(selector).map(subSelector => {\n                if (subSelector.indexOf(\":global\") > -1) {\n                    return subSelector.replace(/\\:global/g, \"\");\n                } else if (subSelector.indexOf(\":host\") > -1) {\n                    return `${subSelector.replace(/\\:host/g, `.${className}`)}`;\n                }\n                return `.${className} ${subSelector}`;\n            }).join(\", \") + \"{\";\n        });\n    }\n    style.innerHTML = styleCSS;\n\n    (shadowRoot || document.head || document.body).appendChild(style);\n    return style;\n}\n","import { getHash, injectStyle, getShadowRoot } from \"./utils\";\nimport { StyledInjector, InjectOptions } from \"./types\";\n\nexport default function styled(css: string): StyledInjector {\n    const injectClassName = \"rCS\" + getHash(css);\n    let injectCount = 0;\n    let injectElement!: HTMLStyleElement;\n\n    return {\n        className: injectClassName,\n        inject(el: HTMLElement | SVGElement, options: Partial<InjectOptions> = {}) {\n            const shadowRoot = getShadowRoot(el);\n            const firstMount = injectCount === 0;\n            let styleElement: HTMLStyleElement;\n\n            if (shadowRoot || firstMount) {\n                styleElement = injectStyle(injectClassName, css, options, shadowRoot);\n            }\n            if (firstMount) {\n                injectElement = styleElement;\n            }\n            if (!shadowRoot) {\n                ++injectCount;\n            }\n            return {\n                destroy() {\n                    if (shadowRoot) {\n                        el.removeChild(styleElement);\n                        styleElement = null;\n                    } else {\n                        if (injectCount > 0) {\n                            --injectCount;\n                        }\n                        if (injectCount === 0 && injectElement) {\n                            injectElement.parentNode!.removeChild(injectElement);\n                            injectElement = null;\n                        }\n                    }\n                },\n            };\n        },\n    };\n}\n\nexport * from \"./types\";\n"],"names":["getHash","str","stringHash","toString","getShadowRoot","parentElement","getRootNode","rootNode","nodeType","injectStyle","className","css","options","shadowRoot","style","document","createElement","setAttribute","nonce","styleCSS","original","replace","all","selector","splitComma","map","subSelector","indexOf","join","innerHTML","head","body","appendChild","styled","injectClassName","injectCount","injectElement","inject","el","firstMount","styleElement","destroy","removeChild","parentNode"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;SAIgBA,QAAQC;SACbC,UAAU,CAACD,GAAD,CAAV,CAAgBE,QAAhB,CAAyB,EAAzB,CAAP;;AAEJ,SAAgBC,cAAcC;MACtBA,aAAa,IAAIA,aAAa,CAACC,WAAnC,EAAgD;QACtCC,QAAQ,GAAGF,aAAa,CAACC,WAAd,EAAjB;;QAEIC,QAAQ,CAACC,QAAT,KAAsB,EAA1B,EAA8B;aACnBD,QAAP;;;;;;AAKZ,SAAgBE,YAAYC,WAAmBC,KAAaC,SAAiCC;MACnFC,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAd;EAEAF,KAAK,CAACG,YAAN,CAAmB,MAAnB,EAA2B,UAA3B;EACAH,KAAK,CAACG,YAAN,CAAmB,gBAAnB,EAAqCP,SAArC;;MAEIE,OAAO,CAACM,KAAZ,EAAmB;IACfJ,KAAK,CAACG,YAAN,CAAmB,OAAnB,EAA4BL,OAAO,CAACM,KAApC;;;MAEAC,QAAQ,GAAGR,GAAf;;MACI,CAACC,OAAO,CAACQ,QAAb,EAAuB;IACnBD,QAAQ,GAAGR,GAAG,CAACU,OAAJ,CAAY,aAAZ,EAA2B,UAACC,GAAD,EAAMC,QAAN;aAC3BC,UAAU,CAACD,QAAD,CAAV,CAAqBE,GAArB,CAAyB,UAAAC,WAAA;YACxBA,WAAW,CAACC,OAAZ,CAAoB,SAApB,IAAiC,CAAC,CAAtC,EAAyC;iBAC9BD,WAAW,CAACL,OAAZ,CAAoB,WAApB,EAAiC,EAAjC,CAAP;SADJ,MAEO,IAAIK,WAAW,CAACC,OAAZ,CAAoB,OAApB,IAA+B,CAAC,CAApC,EAAuC;iBACnC,KAAGD,WAAW,CAACL,OAAZ,CAAoB,SAApB,EAA+B,MAAIX,SAAnC,CAAV;;;eAEG,MAAIA,SAAJ,MAAA,GAAiBgB,WAAxB;OANG,EAOJE,IAPI,CAOC,IAPD,IAOS,GAPhB;KADO,CAAX;;;EAWJd,KAAK,CAACe,SAAN,GAAkBV,QAAlB;GAECN,UAAU,IAAIE,QAAQ,CAACe,IAAvB,IAA+Bf,QAAQ,CAACgB,IAAzC,EAA+CC,WAA/C,CAA2DlB,KAA3D;SACOA,KAAP;;;SCvCoBmB,OAAOtB;MACrBuB,eAAe,GAAG,QAAQlC,OAAO,CAACW,GAAD,CAAvC;MACIwB,WAAW,GAAG,CAAlB;MACIC,aAAJ;SAEO;IACH1B,SAAS,EAAEwB,eADR;IAEHG,MAAM,EAAN,UAAOC,EAAP,EAAqC1B,OAArC;4BAAqC,EAAA;QAAAA,YAAA;;;UAC3BC,UAAU,GAAGT,aAAa,CAACkC,EAAD,CAAhC;UACMC,UAAU,GAAGJ,WAAW,KAAK,CAAnC;UACIK,YAAJ;;UAEI3B,UAAU,IAAI0B,UAAlB,EAA8B;QAC1BC,YAAY,GAAG/B,WAAW,CAACyB,eAAD,EAAkBvB,GAAlB,EAAuBC,OAAvB,EAAgCC,UAAhC,CAA1B;;;UAEA0B,UAAJ,EAAgB;QACZH,aAAa,GAAGI,YAAhB;;;UAEA,CAAC3B,UAAL,EAAiB;UACXsB,WAAF;;;aAEG;QACHM,OAAO,EAAP;cACQ5B,UAAJ,EAAgB;YACZyB,EAAE,CAACI,WAAH,CAAeF,YAAf;YACAA,YAAY,GAAG,IAAf;WAFJ,MAGO;gBACCL,WAAW,GAAG,CAAlB,EAAqB;gBACfA,WAAF;;;gBAEAA,WAAW,KAAK,CAAhB,IAAqBC,aAAzB,EAAwC;cACpCA,aAAa,CAACO,UAAd,CAA0BD,WAA1B,CAAsCN,aAAtC;cACAA,aAAa,GAAG,IAAhB;;;;OAXhB;;GAhBR;;;;;"}