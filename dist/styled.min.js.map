{"version":3,"file":"styled.min.js","sources":["../src/styled.ts","../src/utils.ts"],"sourcesContent":["import { getHash, injectStyle, getShadowRoot } from \"./utils\";\nimport { StyledInjector, InjectOptions } from \"./types\";\n\nexport default function styled(css: string): StyledInjector {\n    const injectClassName = \"rCS\" + getHash(css);\n    let injectCount = 0;\n    let injectElement!: HTMLStyleElement;\n\n    return {\n        className: injectClassName,\n        inject(el: HTMLElement | SVGElement, options: Partial<InjectOptions> = {}) {\n            const shadowRoot = getShadowRoot(el);\n            const firstMount = injectCount === 0;\n            let styleElement: HTMLStyleElement;\n\n            if (shadowRoot || firstMount) {\n                styleElement = injectStyle(injectClassName, css, options, shadowRoot);\n            }\n            if (firstMount) {\n                injectElement = styleElement;\n            }\n            if (!shadowRoot) {\n                ++injectCount;\n            }\n            return {\n                destroy() {\n                    if (shadowRoot) {\n                        el.removeChild(styleElement);\n                        styleElement = null;\n                    } else {\n                        if (injectCount > 0) {\n                            --injectCount;\n                        }\n                        if (injectCount === 0 && injectElement) {\n                            injectElement.parentNode!.removeChild(injectElement);\n                            injectElement = null;\n                        }\n                    }\n                },\n            };\n        },\n    };\n}\n\nexport * from \"./types\";\n","import stringHash from \"string-hash\";\nimport { splitComma } from \"@daybrush/utils\";\nimport { InjectOptions } from \"./types\";\n\nexport function getHash(str: string) {\n    return stringHash(str).toString(36);\n}\nexport function getShadowRoot(parentElement: HTMLElement | SVGElement) {\n    if (parentElement && parentElement.getRootNode) {\n        const rootNode = parentElement.getRootNode();\n\n        if (rootNode.nodeType === 11) {\n            return rootNode;\n        }\n    }\n    return;\n}\nexport function injectStyle(className: string, css: string, options: Partial<InjectOptions>, shadowRoot?: Node) {\n    const style = document.createElement(\"style\");\n\n    style.setAttribute(\"type\", \"text/css\");\n    style.setAttribute(\"data-styled-id\", className);\n\n    if (options.nonce) {\n        style.setAttribute(\"nonce\", options.nonce);\n    }\n    let styleCSS = css;\n    if (!options.original) {\n        styleCSS = css.replace(/([^}{]*){/mg, (all, selector) => {\n            return splitComma(selector).map(subSelector => {\n                if (subSelector.indexOf(\":global\") > -1) {\n                    return subSelector.replace(/\\:global/g, \"\");\n                } else if (subSelector.indexOf(\":host\") > -1) {\n                    return `${subSelector.replace(/\\:host/g, `.${className}`)}`;\n                }\n                return `.${className} ${subSelector}`;\n            }).join(\", \") + \"{\";\n        });\n    }\n    style.innerHTML = styleCSS;\n\n    (shadowRoot || document.head || document.body).appendChild(style);\n    return style;\n}\n"],"names":["css","injectElement","injectClassName","stringHash","toString","injectCount","className","inject","el","options","styleElement","shadowRoot","parentElement","getRootNode","rootNode","nodeType","getShadowRoot","firstMount","style","document","createElement","setAttribute","nonce","styleCSS","original","replace","all","selector","splitComma","map","subSelector","indexOf","join","innerHTML","head","body","appendChild","injectStyle","destroy","removeChild","parentNode"],"mappings":";;;;;;;;g8BAG+BA,OAGvBC,EAFEC,EAAkB,MCCjBC,EDDiCH,GCCjBI,SAAS,IDA5BC,EAAc,QAGX,CACHC,UAAWJ,EACXK,OAAA,SAAOC,EAA8BC,gBAAAA,UAG7BC,EAFEC,WCJYC,MACtBA,GAAiBA,EAAcC,YAAa,KACtCC,EAAWF,EAAcC,iBAEL,KAAtBC,EAASC,gBACFD,GDDYE,CAAcR,GAC3BS,EAA6B,IAAhBZ,SAGfM,GAAcM,KACdP,WCCYJ,EAAmBN,EAAaS,EAAiCE,OACnFO,EAAQC,SAASC,cAAc,SAErCF,EAAMG,aAAa,OAAQ,YAC3BH,EAAMG,aAAa,iBAAkBf,GAEjCG,EAAQa,OACRJ,EAAMG,aAAa,QAASZ,EAAQa,WAEpCC,EAAWvB,SACVS,EAAQe,WACTD,EAAWvB,EAAIyB,QAAQ,cAAe,SAACC,EAAKC,UACjCC,EAAWD,GAAUE,IAAI,SAAAC,UACU,EAAlCA,EAAYC,QAAQ,WACbD,EAAYL,QAAQ,YAAa,KACD,EAAhCK,EAAYC,QAAQ,SACpB,GAAGD,EAAYL,QAAQ,UAAW,IAAInB,GAE1C,IAAIA,MAAawB,IACzBE,KAAK,MAAQ,OAGxBd,EAAMe,UAAYV,GAEjBZ,GAAcQ,SAASe,MAAQf,SAASgB,MAAMC,YAAYlB,GACpDA,ED1BoBmB,CAAYnC,EAAiBF,EAAKS,EAASE,IAE1DM,IACAhB,EAAgBS,GAEfC,KACCN,EAEC,CACHiC,QAAA,WACQ3B,GACAH,EAAG+B,YAAY7B,GACfA,EAAe,OAEG,EAAdL,KACEA,EAEc,IAAhBA,GAAqBJ,IACrBA,EAAcuC,WAAYD,YAAYtC,GACtCA,EAAgB"}