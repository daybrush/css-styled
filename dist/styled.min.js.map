{"version":3,"file":"styled.min.js","sources":["../src/utils.ts","../src/styled.ts"],"sourcesContent":["import stringHash from \"string-hash\";\nimport { splitComma } from \"@daybrush/utils\";\nimport { InjectOptions } from \"./types\";\n\nexport function getHash(str: string) {\n    return stringHash(str).toString(36);\n}\nexport function getShadowRoot(parentElement: HTMLElement | SVGElement) {\n    if (parentElement && parentElement.getRootNode) {\n        const rootNode = parentElement.getRootNode();\n\n        if (rootNode.nodeType === 11) {\n            return rootNode;\n        }\n    }\n    return;\n}\nexport function injectStyle(className: string, css: string, options: Partial<InjectOptions>, shadowRoot?: Node) {\n    const style = document.createElement(\"style\");\n\n    style.setAttribute(\"type\", \"text/css\");\n    style.setAttribute(\"data-styled-id\", className);\n\n    if (options.nonce) {\n        style.setAttribute(\"nonce\", options.nonce);\n    }\n    let styleCSS = css;\n    if (!options.original) {\n        styleCSS = css.replace(/([^}{]*){/mg, (all, selector) => {\n            return splitComma(selector).map(subSelector => {\n                if (subSelector.indexOf(\":global\") > -1) {\n                    return subSelector.replace(/\\:global/g, \"\");\n                } else if (subSelector.indexOf(\":host\") > -1) {\n                    return `${subSelector.replace(/\\:host/g, `.${className}`)}`;\n                }\n                return `.${className} ${subSelector}`;\n            }).join(\", \") + \"{\";\n        });\n    }\n    style.innerHTML = styleCSS;\n\n    (shadowRoot || document.head || document.body).appendChild(style);\n    return style;\n}\n","import { getHash, injectStyle, getShadowRoot } from \"./utils\";\nimport { StyledInjector, InjectOptions } from \"./types\";\n\nexport default function styled(css: string): StyledInjector {\n    const injectClassName = \"rCS\" + getHash(css);\n    let injectCount = 0;\n    let injectElement!: HTMLStyleElement;\n\n    return {\n        className: injectClassName,\n        inject(el: HTMLElement | SVGElement, options: Partial<InjectOptions> = {}) {\n            const shadowRoot = getShadowRoot(el);\n            const firstMount = injectCount === 0;\n            let styleElement: HTMLStyleElement;\n\n            if (shadowRoot || firstMount) {\n                styleElement = injectStyle(injectClassName, css, options, shadowRoot);\n            }\n            if (firstMount) {\n                injectElement = styleElement;\n            }\n            if (!shadowRoot) {\n                ++injectCount;\n            }\n            return {\n                destroy() {\n                    if (shadowRoot) {\n                        el.removeChild(styleElement);\n                        styleElement = null;\n                    } else {\n                        if (injectCount > 0) {\n                            --injectCount;\n                        }\n                        if (injectCount === 0 && injectElement) {\n                            injectElement.parentNode!.removeChild(injectElement);\n                            injectElement = null;\n                        }\n                    }\n                },\n            };\n        },\n    };\n}\n\nexport * from \"./types\";\n"],"names":["injectStyle","className","css","options","shadowRoot","style","document","createElement","setAttribute","nonce","styleCSS","original","replace","all","selector","map","subSelector","indexOf","join","innerHTML","head","body","appendChild","injectElement","injectClassName","stringHash","toString","injectCount","inject","el","styleElement","parentElement","getRootNode","rootNode","nodeType","getShadowRoot","firstMount","destroy","removeChild","parentNode"],"mappings":";;;;;;;;2RAiBgBA,EAAYC,EAAmBC,EAAaC,EAAiCC,OACnFC,EAAQC,SAASC,cAAc,SAErCF,EAAMG,aAAa,OAAQ,YAC3BH,EAAMG,aAAa,iBAAkBP,GAEjCE,EAAQM,OACRJ,EAAMG,aAAa,QAASL,EAAQM,WAEpCC,EAAWR,SACVC,EAAQQ,WACTD,EAAWR,EAAIU,QAAQ,cAAe,SAACC,EAAKC,aACtBA,0HAAUC,IAAI,SAAAC,UACU,EAAlCA,EAAYC,QAAQ,WACbD,EAAYJ,QAAQ,YAAa,KACD,EAAhCI,EAAYC,QAAQ,SACpB,GAAGD,EAAYJ,QAAQ,UAAW,IAAIX,GAE1C,IAAIA,MAAae,IACzBE,KAAK,MAAQ,aAGxBb,EAAMc,UAAYT,GAEjBN,GAAcE,SAASc,MAAQd,SAASe,MAAMC,YAAYjB,GACpDA,kBCvCoBH,OAGvBqB,EAFEC,EAAkB,MDCjBC,ECDiCvB,GDCjBwB,SAAS,ICA5BC,EAAc,QAGX,CACH1B,UAAWuB,EACXI,OAAA,SAAOC,EAA8B1B,gBAAAA,UAG7B2B,EAFE1B,WDJY2B,MACtBA,GAAiBA,EAAcC,YAAa,KACtCC,EAAWF,EAAcC,iBAEL,KAAtBC,EAASC,gBACFD,GCDYE,CAAcN,GAC3BO,EAA6B,IAAhBT,SAGfvB,GAAcgC,KACdN,EAAe9B,EAAYwB,EAAiBtB,EAAKC,EAASC,IAE1DgC,IACAb,EAAgBO,GAEf1B,KACCuB,EAEC,CACHU,QAAA,WACQjC,GACAyB,EAAGS,YAAYR,GACfA,EAAe,OAEG,EAAdH,KACEA,EAEc,IAAhBA,GAAqBJ,IACrBA,EAAcgB,WAAYD,YAAYf,GACtCA,EAAgB"}