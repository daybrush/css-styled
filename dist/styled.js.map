{"version":3,"file":"styled.js","sources":["../src/utils.ts","../src/styled.ts"],"sourcesContent":["import stringHash from \"string-hash\";\nimport { splitComma } from \"@daybrush/utils\";\nimport { InjectOptions } from \"./types\";\n\nexport function getHash(str: string) {\n    return stringHash(str).toString(36);\n}\nexport function getShadowRoot(parentElement: HTMLElement | SVGElement) {\n    if (parentElement && parentElement.getRootNode) {\n        const rootNode = parentElement.getRootNode();\n\n        if (rootNode.nodeType === 11) {\n            return rootNode;\n        }\n    }\n    return;\n}\nexport function replaceStyle(className: string, css: string, options: Partial<InjectOptions>) {\n    if (options.original) {\n        return css;\n    }\n    return css.replace(/([^};{\\s}][^};{]*|^\\s*){/mg, (_, selector) => {\n        const trimmedSelector = selector.trim();\n        return (trimmedSelector ? splitComma(trimmedSelector) : [\"\"]).map(subSelector => {\n            const trimmedSubSelector = subSelector.trim();\n            if (trimmedSubSelector.indexOf(\"@\") === 0) {\n                return trimmedSubSelector;\n            } else if (trimmedSubSelector.indexOf(\":global\") > -1) {\n                return trimmedSubSelector.replace(/\\:global/g, \"\");\n            } else if (trimmedSubSelector.indexOf(\":host\") > -1) {\n                return `${trimmedSubSelector.replace(/\\:host/g, `.${className}`)}`;\n            } else if (trimmedSubSelector) {\n                return `.${className} ${trimmedSubSelector}`;\n            } else {\n                return `.${className}`;\n            }\n        }).join(\", \") + \" {\";\n    });\n}\nexport function injectStyle(className: string, css: string, options: Partial<InjectOptions>, shadowRoot?: Node) {\n    const style = document.createElement(\"style\");\n\n    style.setAttribute(\"type\", \"text/css\");\n    style.setAttribute(\"data-styled-id\", className);\n\n    if (options.nonce) {\n        style.setAttribute(\"nonce\", options.nonce);\n    }\n    style.innerHTML = replaceStyle(className, css, options);\n\n    (shadowRoot || document.head || document.body).appendChild(style);\n    return style;\n}\n","import { getHash, injectStyle, getShadowRoot } from \"./utils\";\nimport { StyledInjector, InjectOptions } from \"./types\";\n\n/**\n * Create an styled object that can be defined and inserted into the css.\n * @param - css styles\n */\nfunction styled(css: string): StyledInjector {\n    const injectClassName = \"rCS\" + getHash(css);\n    let injectCount = 0;\n    let injectElement!: HTMLStyleElement;\n\n    return {\n        className: injectClassName,\n        inject(el: HTMLElement | SVGElement, options: Partial<InjectOptions> = {}) {\n            const shadowRoot = getShadowRoot(el);\n            const firstMount = injectCount === 0;\n            let styleElement: HTMLStyleElement;\n\n            if (shadowRoot || firstMount) {\n                styleElement = injectStyle(injectClassName, css, options, shadowRoot);\n            }\n            if (firstMount) {\n                injectElement = styleElement;\n            }\n            if (!shadowRoot) {\n                ++injectCount;\n            }\n            return {\n                destroy() {\n                    if (shadowRoot) {\n                        el.removeChild(styleElement);\n                        styleElement = null;\n                    } else {\n                        if (injectCount > 0) {\n                            --injectCount;\n                        }\n                        if (injectCount === 0 && injectElement) {\n                            injectElement.parentNode!.removeChild(injectElement);\n                            injectElement = null;\n                        }\n                    }\n                },\n            };\n        },\n    };\n}\n\nexport * from \"./types\";\nexport default styled;\n"],"names":["getHash","str","stringHash","toString","getShadowRoot","parentElement","getRootNode","rootNode","nodeType","replaceStyle","className","css","options","original","replace","_","selector","trimmedSelector","trim","splitComma","map","subSelector","trimmedSubSelector","indexOf","join","injectStyle","shadowRoot","style","document","createElement","setAttribute","nonce","innerHTML","head","body","appendChild","styled","injectClassName","injectCount","injectElement","inject","el","firstMount","styleElement","destroy","removeChild","parentNode"],"mappings":"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"}